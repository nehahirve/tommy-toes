{"version":3,"sources":["Utils.js","components/Timer.js","components/About.js","components/Backdrop.js","alarm.wav","work.mp3","App.js","reportWebVitals.js","index.js"],"names":["msToHuman","ms","minutes","Math","floor","seconds","toString","padStart","join","rgbStringToRgbObject","c1","r","slice","split","g","b","createGradient","c2","gradient","i","push","map","color","round","Display","styled","button","props","onABreak","Timer","timer","toggleTimer","useState","label","setLabel","time","control","triggerHoverState","e","target","focus","removeHoverState","blur","className","onMouseOver","onFocus","onMouseLeave","onBlur","onClick","Title","a","About","href","colours","gradientWork","gradientBreak","Wrapper","div","ripeness","Backdrop","input","children","duration","alarm","Audio","alarmSFX","work","workSFX","volume","DURATION","Toggle","App","appVisible","setAppVisible","active","setTimer","useEffect","timerInterval","play","setInterval","clearInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c74662e.chunk.js","sourcesContent":["const msToHuman = ms => {\n  const minutes = Math.floor((ms / 1000 / 60) % 60)\n  const seconds = Math.floor((ms / 1000) % 60)\n  return [\n    minutes.toString().padStart(2, '0'),\n    seconds.toString().padStart(2, '0')\n  ].join(' : ')\n}\n\nexport { msToHuman }\n\nfunction rgbStringToRgbObject(c1) {\n  c1 = c1.slice(4, -1).split(',')\n  return {\n    r: +c1[0],\n    g: +c1[1],\n    b: +c1[2]\n  }\n}\n\nexport function createGradient(c1, c2) {\n  c1 = rgbStringToRgbObject(c1)\n  c2 = rgbStringToRgbObject(c2)\n  let gradient = []\n  for (let i = 0; i < 255; i++) {\n    let r = c1.r + (i * (c2.r - c1.r)) / 255\n    let g = c1.g + (i * (c2.g - c1.g)) / 255\n    let b = c1.b + (i * (c2.b - c1.b)) / 255\n    gradient.push({ r, g, b })\n  }\n  return gradient.map(color => {\n    return `rgb(${Math.round(color.r)}, ${Math.round(color.g)}, ${Math.round(\n      color.b\n    )})`\n  })\n}\n\nexport function mapToGradient(input, ms) {\n  const outputStart = 1\n  const outputEnd = 255\n  const inputStart = 0\n  const inputEnd = ms\n  const slope = (outputEnd - outputStart) / (inputEnd - inputStart)\n  return outputStart + slope * (input - inputStart)\n}\n","import { useState } from 'react'\nimport styled from 'styled-components'\nimport { msToHuman } from '../Utils'\nimport 'animate.css'\n\nconst Display = styled.button`\n  width: 25rem;\n  font-size: 6rem;\n  border: 6px solid black;\n  border-radius: 999px;\n  color: ${props => (props.onABreak ? 'linen' : 'black')};\n  background: ${props => (props.onABreak ? 'black' : 'none')};\n  padding-top: 0.25rem;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background: black;\n    color: linen;\n    cursor: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100' width='20px' height='20px'%3E%3Ccircle cx='50' cy='50' r='50' fill='linen'/%3E%3C/svg%3E\"),\n      auto;\n  }\n`\n\nconst Timer = ({ timer, toggleTimer }) => {\n  const [label, setLabel] = useState(null)\n  const { time, control, onABreak } = timer\n\n  const triggerHoverState = e => {\n    e.target.focus()\n    setLabel(control)\n  }\n  const removeHoverState = e => {\n    e.target.blur()\n    setLabel(null)\n  }\n\n  const handleClick = e => {\n    e.target.blur()\n    toggleTimer(control)\n  }\n\n  return (\n    <main>\n      <Display\n        className={\n          time === 0\n            ? 'animate__animated animate__infinite animate__wobble'\n            : null\n        }\n        onMouseOver={triggerHoverState}\n        onFocus={triggerHoverState}\n        onMouseLeave={removeHoverState}\n        onBlur={removeHoverState}\n        onClick={handleClick}\n        onABreak={onABreak}\n      >\n        {label || msToHuman(time)}\n      </Display>\n    </main>\n  )\n}\n\nexport default Timer\n","import styled from 'styled-components'\n\nconst Title = styled.a`\n  text-decoration: none;\n  cursor: pointer;\n  background-image: linear-gradient(120deg, black, black);\n  background-repeat: no-repeat;\n  background-position: 0 88%;\n  background-size: 100% 0.1rem;\n  transition: background-size 0.25s ease-in;\n\n  &:hover,\n  &:focus {\n    cursor: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100' width='20px' height='20px'%3E%3Ccircle cx='50' cy='50' r='50' fill='linen'/%3E%3C/svg%3E\"),\n      auto;\n    background-size: 100% 70%;\n    color: linen;\n  }\n`\n\nconst About = () => {\n  return (\n    <main>\n      <h1>\n        <Title href='https://github.com/nehahirve/tommy-toes'>Tommy Toe</Title>\n      </h1>\n      <p>\n        is a minimalist pomodoro timer. It works. No fancy features here,\n        because I had more important work to do. Just like you do.\n      </p>\n    </main>\n  )\n}\n\nexport default About\n","import styled from 'styled-components'\nimport { createGradient, mapToGradient } from '../Utils'\n\nconst colours = { raw: 'rgb(136, 157, 2)', ripe: 'rgb(202, 61, 0)' }\nconst gradientWork = createGradient(colours.ripe, colours.raw)\nconst gradientBreak = createGradient(colours.raw, colours.ripe)\n\nconst Wrapper = styled.div`\n  background: ${props => props.ripeness};\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100' width='20px' height='20px'%3E%3Ccircle cx='50' cy='50' r='50'/%3E%3C/svg%3E\"),\n    auto;\n`\n\nconst Backdrop = ({ time, children, duration, onABreak }) => {\n  const gradient = onABreak ? gradientBreak : gradientWork\n  const ripeness = gradient[Math.floor(mapToGradient(time, duration)) - 1]\n\n  return <Wrapper ripeness={ripeness}>{children}</Wrapper>\n}\n\nexport default Backdrop\n","export default __webpack_public_path__ + \"static/media/alarm.0b403865.wav\";","export default __webpack_public_path__ + \"static/media/work.4b5d5306.mp3\";","import { useState, useEffect } from 'react'\nimport Timer from './components/Timer'\nimport About from './components/About'\nimport Backdrop from './components/Backdrop'\nimport styled from 'styled-components'\n\nimport alarmSFX from './alarm.wav'\nimport workSFX from './work.mp3'\n\nconst alarm = new Audio(alarmSFX)\nconst work = new Audio(workSFX)\nalarm.volume = 0.6\n\nconst DURATION = 1000 * 60 * 25\nconst BREAK_DURATION = 1000 * 5 * 60\n\nconst Toggle = styled.button`\n  position: absolute;\n  background: none;\n  right: 3rem;\n  top: 3rem;\n  font-family: 'Agrandir';\n  font-weight: 400;\n  font-size: 1.5rem;\n  background-image: linear-gradient(120deg, black, black);\n  background-repeat: no-repeat;\n  background-position: 0 88%;\n  background-size: 100% 0.1rem;\n  transition: background-size 0.25s ease-in;\n  &:hover,\n  &:focus {\n    background-size: 100% 70%;\n    color: linen;\n    cursor: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100' width='20px' height='20px'%3E%3Ccircle cx='50' cy='50' r='50' fill='linen'/%3E%3C/svg%3E\"),\n      auto;\n  }\n`\n\nfunction App() {\n  const [appVisible, setAppVisible] = useState(true)\n\n  const [timer, setTimer] = useState({\n    active: false,\n    time: DURATION,\n    onABreak: false,\n    control: 'START'\n  })\n\n  const soundAlarm = () => {\n    if (!timer.onABreak) {\n      setTimer({\n        ...timer,\n        active: false,\n        control: 'BREAK'\n      })\n      alarm.play()\n    } else {\n      setTimer({\n        ...timer,\n        active: false,\n        control: 'RESET'\n      })\n      work.play()\n    }\n  }\n\n  const toggleTimer = control => {\n    switch (control) {\n      case 'START':\n        setTimer({ ...timer, active: true, control: 'PAUSE' })\n        break\n      case 'PAUSE':\n        setTimer({ ...timer, active: false, control: 'START' })\n        break\n      case 'BREAK':\n        setTimer({\n          ...timer,\n          active: true,\n          control: 'PAUSE',\n          onABreak: true,\n          time: BREAK_DURATION\n        })\n        break\n      case 'RESET':\n        setTimer({\n          ...timer,\n          control: 'START',\n          onABreak: false,\n          time: DURATION\n        })\n        break\n      default:\n        return\n    }\n  }\n\n  useEffect(() => {\n    let timerInterval\n    if (timer.active && timer.time === 0) soundAlarm()\n    if (timer.active) {\n      timerInterval =\n        timer.time > 0 &&\n        setInterval(() => setTimer({ ...timer, time: timer.time - 1000 }), 1000)\n    } else clearInterval(timerInterval)\n    return () => clearInterval(timerInterval)\n  }, [timer.time, timer.active])\n\n  return (\n    <Backdrop onABreak={timer.onABreak} time={timer.time} duration={DURATION}>\n      <Toggle\n        onClick={e => {\n          e.target.blur()\n          setAppVisible(!appVisible)\n        }}\n      >\n        {appVisible ? 'About' : 'X'}\n      </Toggle>\n      {appVisible && <Timer timer={timer} toggleTimer={toggleTimer} />}\n      {!appVisible && <About />}\n    </Backdrop>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}