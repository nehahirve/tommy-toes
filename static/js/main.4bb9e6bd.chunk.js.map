{"version":3,"sources":["Utils.js","components/Timer.js","components/About.js","alarm.wav","work.mp3","hooks/useTimer.js","components/Backdrop.js","App.js","reportWebVitals.js","index.js"],"names":["msToHuman","ms","minutes","Math","floor","seconds","toString","padStart","join","createGradient","c1","c2","rgbStringToRgbObject","gradient","i","r","g","b","push","map","color","round","slice","split","Display","styled","button","props","onABreak","Timer","timer","toggleTimer","useState","label","setLabel","time","control","triggerHoverState","e","target","focus","removeHoverState","blur","className","onMouseOver","onFocus","onMouseLeave","onBlur","onClick","Title","a","About","href","alarm","Audio","alarmSFX","work","workSFX","volume","DURATION","colours","gradientWork","gradientBreak","Wrapper","div","ripeness","Backdrop","input","children","duration","breakDuration","Toggle","App","appVisible","setAppVisible","active","setTimer","action","console","log","play","useTimer","useEffect","timerInterval","setInterval","clearInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bb9e6bd.chunk.js","sourcesContent":["const msToHuman = ms => {\n  const minutes = Math.floor((ms / 1000 / 60) % 60)\n  const seconds = Math.floor((ms / 1000) % 60)\n  return [\n    minutes.toString().padStart(2, '0'),\n    seconds.toString().padStart(2, '0')\n  ].join(' : ')\n}\n\nconst createGradient = (c1, c2) => {\n  c1 = rgbStringToRgbObject(c1)\n  c2 = rgbStringToRgbObject(c2)\n  let gradient = []\n  for (let i = 0; i < 255; i++) {\n    let r = c1.r + (i * (c2.r - c1.r)) / 255\n    let g = c1.g + (i * (c2.g - c1.g)) / 255\n    let b = c1.b + (i * (c2.b - c1.b)) / 255\n    gradient.push({ r, g, b })\n  }\n  return gradient.map(color => {\n    return `rgb(${Math.round(color.r)}, ${Math.round(color.g)}, ${Math.round(\n      color.b\n    )})`\n  })\n}\n\nconst mapToGradient = (input, ms) => {\n  const outputStart = 1\n  const outputEnd = 255\n  const inputStart = 0\n  const inputEnd = ms\n  const slope = (outputEnd - outputStart) / (inputEnd - inputStart)\n  return outputStart + slope * (input - inputStart)\n}\n\nexport { msToHuman, mapToGradient, createGradient }\n\nfunction rgbStringToRgbObject(c1) {\n  c1 = c1.slice(4, -1).split(',')\n  return {\n    r: +c1[0],\n    g: +c1[1],\n    b: +c1[2]\n  }\n}\n","import { useState } from 'react'\nimport styled from 'styled-components'\nimport { msToHuman } from '../Utils'\nimport 'animate.css'\n\nconst Display = styled.button`\n  width: 25rem;\n  font-size: 6rem;\n  border: 6px solid black;\n  border-radius: 999px;\n  color: ${props => (props.onABreak ? 'linen' : 'black')};\n  background: ${props => (props.onABreak ? 'black' : 'none')};\n  padding-top: 0.25rem;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background: black;\n    color: linen;\n    cursor: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100' width='20px' height='20px'%3E%3Ccircle cx='50' cy='50' r='50' fill='linen'/%3E%3C/svg%3E\"),\n      auto;\n  }\n`\n\nconst Timer = ({ timer, toggleTimer }) => {\n  const [label, setLabel] = useState(null)\n  const { time, control, onABreak } = timer\n\n  const triggerHoverState = e => {\n    e.target.focus()\n    setLabel(control)\n  }\n  const removeHoverState = e => {\n    e.target.blur()\n    setLabel(null)\n  }\n\n  const handleClick = e => {\n    e.target.blur()\n    toggleTimer(control)\n  }\n\n  return (\n    <main>\n      <Display\n        className={\n          time === 0\n            ? 'animate__animated animate__infinite animate__wobble'\n            : null\n        }\n        onMouseOver={triggerHoverState}\n        onFocus={triggerHoverState}\n        onMouseLeave={removeHoverState}\n        onBlur={removeHoverState}\n        onClick={handleClick}\n        onABreak={onABreak}\n      >\n        {label || msToHuman(time)}\n      </Display>\n    </main>\n  )\n}\n\nexport default Timer\n","import styled from 'styled-components'\n\nconst Title = styled.a`\n  text-decoration: none;\n  cursor: pointer;\n  background-image: linear-gradient(120deg, black, black);\n  background-repeat: no-repeat;\n  background-position: 0 88%;\n  background-size: 100% 0.1rem;\n  transition: background-size 0.25s ease-in;\n\n  &:hover,\n  &:focus {\n    cursor: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100' width='20px' height='20px'%3E%3Ccircle cx='50' cy='50' r='50' fill='linen'/%3E%3C/svg%3E\"),\n      auto;\n    background-size: 100% 70%;\n    color: linen;\n  }\n`\n\nconst About = () => {\n  return (\n    <main>\n      <h1>\n        <Title href='https://github.com/nehahirve/tommy-toes'>Tommy Toe</Title>\n      </h1>\n      <p>\n        is a minimalist pomodoro timer. It works. No fancy features here,\n        because I had more important work to do. Just like you do.\n      </p>\n    </main>\n  )\n}\n\nexport default About\n","export default __webpack_public_path__ + \"static/media/alarm.0b403865.wav\";","export default __webpack_public_path__ + \"static/media/work.4b5d5306.mp3\";","import { useState } from 'react'\n\nimport alarmSFX from '../alarm.wav'\nimport workSFX from '../work.mp3'\n\nconst alarm = new Audio(alarmSFX)\nconst work = new Audio(workSFX)\nalarm.volume = 0.6\n\nexport const DURATION = 1000 * 6\nconst BREAK_DURATION = 1000 * 4\n\nexport default function useTimer() {\n  const [timer, setTimer] = useState({\n    active: false,\n    time: DURATION,\n    onABreak: false,\n    control: 'START'\n  })\n\n  const toggleTimer = action => {\n    console.log(action)\n    switch (action) {\n      case 'START':\n        setTimer({ ...timer, active: true, control: 'PAUSE' })\n        break\n      case 'PAUSE':\n        setTimer({ ...timer, active: false, control: 'START' })\n        break\n      case 'BREAK':\n        setTimer({\n          ...timer,\n          active: true,\n          control: 'PAUSE',\n          onABreak: true,\n          time: BREAK_DURATION\n        })\n        break\n      case 'RESET':\n        setTimer({\n          ...timer,\n          control: 'START',\n          onABreak: false,\n          time: DURATION\n        })\n        break\n      case 'COUNTDOWN':\n        setTimer({\n          ...timer,\n          control: 'PAUSE',\n          time: timer.time - 1000\n        })\n        break\n      case 'STARTBREAK':\n        setTimer({\n          ...timer,\n          active: false,\n          control: 'BREAK'\n        })\n        alarm.play()\n        break\n      case 'TIMEOUT':\n        setTimer({\n          ...timer,\n          active: false,\n          control: 'RESET'\n        })\n        work.play()\n        break\n      default:\n        return\n    }\n  }\n\n  return [timer, toggleTimer]\n}\n","import styled from 'styled-components'\nimport { createGradient, mapToGradient } from '../Utils'\n\nconst colours = { raw: 'rgb(136, 157, 2)', ripe: 'rgb(202, 61, 0)' }\nconst gradientWork = createGradient(colours.ripe, colours.raw)\nconst gradientBreak = createGradient(colours.raw, colours.ripe)\n\nconst Wrapper = styled.div`\n  background: ${props => props.ripeness};\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100' width='20px' height='20px'%3E%3Ccircle cx='50' cy='50' r='50'/%3E%3C/svg%3E\"),\n    auto;\n`\n\nconst Backdrop = ({ time, children, duration, breakDuration, onABreak }) => {\n  const gradient = onABreak ? gradientBreak : gradientWork\n  const ripeness = gradient[Math.floor(mapToGradient(time, duration)) - 1]\n\n  return <Wrapper ripeness={ripeness}>{children}</Wrapper>\n}\n\nexport default Backdrop\n","import { useState, useEffect } from 'react'\nimport Timer from './components/Timer'\nimport About from './components/About'\nimport useTimer, { DURATION } from './hooks/useTimer'\nimport Backdrop from './components/Backdrop'\nimport styled from 'styled-components'\n\nconst Toggle = styled.button`\n  position: absolute;\n  background: none;\n  right: 3rem;\n  top: 3rem;\n  font-family: 'Agrandir';\n  font-weight: 400;\n  font-size: 1.5rem;\n  background-image: linear-gradient(120deg, black, black);\n  background-repeat: no-repeat;\n  background-position: 0 88%;\n  background-size: 100% 0.1rem;\n  transition: background-size 0.25s ease-in;\n  &:hover,\n  &:focus {\n    background-size: 100% 70%;\n    color: linen;\n    cursor: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100' width='20px' height='20px'%3E%3Ccircle cx='50' cy='50' r='50' fill='linen'/%3E%3C/svg%3E\"),\n      auto;\n  }\n`\n\nfunction App() {\n  const [appVisible, setAppVisible] = useState(true)\n  const [timer, toggleTimer] = useTimer()\n\n  useEffect(() => {\n    let timerInterval\n    if (timer.active && timer.time === 0) {\n      toggleTimer(timer.onABreak ? 'TIMEOUT' : 'STARTBREAK')\n    }\n    if (timer.active) {\n      timerInterval =\n        timer.time > 0 &&\n        setInterval(() => {\n          toggleTimer('COUNTDOWN')\n          console.log(timer)\n        }, 1000)\n    } else clearInterval(timerInterval)\n    return () => clearInterval(timerInterval)\n  }, [timer.time, timer.active])\n\n  return (\n    <Backdrop onABreak={timer.onABreak} time={timer.time} duration={DURATION}>\n      <Toggle\n        onClick={e => {\n          e.target.blur()\n          setAppVisible(!appVisible)\n        }}\n      >\n        {appVisible ? 'About' : 'X'}\n      </Toggle>\n      {appVisible && <Timer timer={timer} toggleTimer={toggleTimer} />}\n      {!appVisible && <About />}\n    </Backdrop>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}