{"version":3,"sources":["Utils.js","components/TimerDisplay.js","components/About.js","components/Backdrop.js","components/ToggleButton.js","alarm.wav","work.mp3","hooks/useTimer.js","App.js","index.js"],"names":["msToHuman","ms","minutes","Math","floor","seconds","toString","padStart","join","createGradient","c1","c2","rgbStringToRgbObject","gradient","i","r","g","b","push","map","color","round","rgbString","slice","split","Wrapper","styled","div","Triangle","button","Display","props","onABreak","TimerDisplay","timer","toggleTimer","useState","label","setLabel","time","control","duration","triggerHoverState","e","target","focus","removeHoverState","blur","onClick","xmlns","viewBox","points","className","onMouseOver","onFocus","onMouseLeave","onBlur","style","transform","Title","a","About","href","colours","gradientWork","gradientBreak","ripeness","Backdrop","input","children","range","Button","ToggleButton","toggled","toggle","alarm","Audio","alarmSFX","work","workSFX","volume","App","appVisible","setAppVisible","DURATION","active","setTimer","action","play","useTimer","useEffect","timerInterval","setTimeout","clearTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf33a0aa.chunk.js","sourcesContent":["const msToHuman = ms => {\n  const minutes = Math.floor((ms / 1000 / 60) % 60)\n  const seconds = Math.floor((ms / 1000) % 60)\n  return [\n    minutes.toString().padStart(2, '0'),\n    seconds.toString().padStart(2, '0')\n  ].join(' : ')\n}\n\nconst createGradient = (c1, c2) => {\n  c1 = rgbStringToRgbObject(c1)\n  c2 = rgbStringToRgbObject(c2)\n  let gradient = []\n  for (let i = 0; i < 255; i++) {\n    let r = c1.r + (i * (c2.r - c1.r)) / 255\n    let g = c1.g + (i * (c2.g - c1.g)) / 255\n    let b = c1.b + (i * (c2.b - c1.b)) / 255\n    gradient.push({ r, g, b })\n  }\n  return gradient.map(color => {\n    return `rgb(${Math.round(color.r)}, ${Math.round(color.g)}, ${Math.round(\n      color.b\n    )})`\n  })\n}\n\nconst mapToGradient = (input, ms) => {\n  const outputStart = 1\n  const outputEnd = 255\n  const inputStart = 0\n  const inputEnd = ms\n  const slope = (outputEnd - outputStart) / (inputEnd - inputStart)\n  return outputStart + slope * (input - inputStart)\n}\n\nexport { msToHuman, mapToGradient, createGradient }\n\nfunction rgbStringToRgbObject(rgbString) {\n  rgbString = rgbString.slice(4, -1).split(',')\n  return {\n    r: +rgbString[0],\n    g: +rgbString[1],\n    b: +rgbString[2]\n  }\n}\n","import { useState } from 'react'\nimport styled from 'styled-components'\nimport { msToHuman } from '../Utils'\nimport 'animate.css'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst Triangle = styled.button`\n  width: 40%;\n  background: none;\n  padding: 3rem;\n  fill: none;\n  stroke: black;\n  stroke-width: 10;\n  stroke-alignment: inner;\n  stroke-linecap: round;\n  stroke-linejoin: mitier;\n  &:focus svg,\n  svg:hover {\n    fill: black;\n  }\n`\n\nconst Display = styled.button`\n  width: 25rem;\n  font-size: 6rem;\n  border: 6px solid black;\n  border-radius: 999px;\n  color: ${props => (props.onABreak ? 'linen' : 'black')};\n  background: ${props => (props.onABreak ? 'black' : 'none')};\n  padding-top: 0.25rem;\n  &:hover,\n  &:focus {\n    background: black;\n    color: linen;\n  }\n`\n\nconst TimerDisplay = ({ timer, toggleTimer }) => {\n  const [label, setLabel] = useState(null)\n  const { time, control, onABreak, duration } = timer\n\n  const triggerHoverState = e => {\n    e.target.focus()\n    setLabel(control)\n  }\n  const removeHoverState = e => {\n    e.target.blur()\n    setLabel(null)\n  }\n\n  const handleClick = e => {\n    e.target.blur()\n    toggleTimer(control)\n  }\n\n  const incrementTime = e => {\n    e.target.blur()\n    toggleTimer('INCREMENT')\n  }\n  const decrementTime = e => {\n    e.target.blur()\n    toggleTimer('DECREMENT')\n  }\n\n  return (\n    <Wrapper>\n      {duration === time && (\n        <Triangle onClick={incrementTime}>\n          <svg xmlns='http://www.w3.org/2000/svg' viewBox='-10 0 120 120'>\n            <polygon points='50 15, 100 100, 0 100' />\n          </svg>\n        </Triangle>\n      )}\n      <Display\n        className={\n          time === 0\n            ? 'animate__animated animate__infinite animate__wobble'\n            : null\n        }\n        onMouseOver={triggerHoverState}\n        onFocus={triggerHoverState}\n        onMouseLeave={removeHoverState}\n        onBlur={removeHoverState}\n        onClick={handleClick}\n        onABreak={onABreak}\n      >\n        {label || msToHuman(time)}\n      </Display>\n      {duration === time && (\n        <Triangle onClick={decrementTime}>\n          <svg\n            style={{ transform: 'rotate(180deg)' }}\n            xmlns='http://www.w3.org/2000/svg'\n            viewBox='-10 0 120 120'\n          >\n            <polygon points='50 15, 100 100, 0 100' />\n          </svg>\n        </Triangle>\n      )}\n    </Wrapper>\n  )\n}\n\nexport default TimerDisplay\n","import styled from 'styled-components'\n\nconst Title = styled.a`\n  text-decoration: none;\n  background-image: linear-gradient(120deg, black, black);\n  background-repeat: no-repeat;\n  background-position: 0 88%;\n  background-size: 100% 0.1rem;\n  transition: background-size 0.25s ease-in;\n\n  &:hover,\n  &:focus {\n    background-size: 100% 70%;\n    color: linen;\n  }\n`\n\nconst Wrapper = styled.div`\n  max-width: 30rem;\n`\n\nconst About = () => {\n  return (\n    <Wrapper>\n      <h1>\n        <Title href='https://github.com/nehahirve/tommy-toes'>Tommy Toe</Title>\n      </h1>\n      <p>\n        is a minimalist pomodoro timer. It works. No fancy features here,\n        because I had more important work to do. Just like you do.\n      </p>\n    </Wrapper>\n  )\n}\n\nexport default About\n","import styled from 'styled-components'\nimport { createGradient, mapToGradient } from '../Utils'\n\nconst colours = { raw: 'rgb(136, 157, 2)', ripe: 'rgb(202, 61, 0)' }\nconst gradientWork = createGradient(colours.ripe, colours.raw)\nconst gradientBreak = createGradient(colours.raw, colours.ripe)\n\nconst Wrapper = styled.div`\n  background: ${props => props.ripeness};\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Backdrop = ({ time, children, duration, onABreak }) => {\n  const gradient = onABreak ? gradientBreak : gradientWork\n  const range = onABreak ? duration / 5 : duration\n  const ripeness = gradient[Math.floor(mapToGradient(time, range)) - 1]\n\n  return (\n    <main>\n      <Wrapper ripeness={ripeness}>{children}</Wrapper>\n    </main>\n  )\n}\n\nexport default Backdrop\n","import styled from 'styled-components'\n\nconst Button = styled.button`\n  position: absolute;\n  background: none;\n  right: 3rem;\n  top: 3rem;\n  font-family: 'Agrandir';\n  font-weight: 400;\n  font-size: 1.5rem;\n  background-image: linear-gradient(120deg, black, black);\n  background-repeat: no-repeat;\n  background-position: 0 88%;\n  background-size: 100% 0.1rem;\n  transition: background-size 0.25s ease-in;\n  &:hover,\n  &:focus {\n    background-size: 100% 70%;\n    color: linen;\n  }\n`\n\nconst ToggleButton = ({ toggled, toggle }) => {\n  return (\n    <Button\n      onClick={e => {\n        e.target.blur()\n        toggle()\n      }}\n    >\n      {toggled ? 'X' : 'About'}\n    </Button>\n  )\n}\n\nexport default ToggleButton\n","export default __webpack_public_path__ + \"static/media/alarm.0b403865.wav\";","export default __webpack_public_path__ + \"static/media/work.4b5d5306.mp3\";","import { useState } from 'react'\n\nimport alarmSFX from '../alarm.wav'\nimport workSFX from '../work.mp3'\n\nconst alarm = new Audio(alarmSFX)\nconst work = new Audio(workSFX)\nalarm.volume = 0.6\n\nexport default function useTimer(DURATION) {\n  const [timer, setTimer] = useState({\n    active: false,\n    time: DURATION,\n    duration: DURATION,\n    onABreak: false,\n    control: 'START'\n  })\n\n  const toggleTimer = action => {\n    switch (action) {\n      case 'INCREMENT':\n        setTimer({\n          ...timer,\n          duration: timer.duration + 60000,\n          time: timer.duration + 60000\n        })\n        break\n      case 'DECREMENT':\n        setTimer({\n          ...timer,\n          duration: timer.duration - 60000,\n          time: timer.duration - 60000\n        })\n        break\n      case 'START':\n        setTimer({ ...timer, active: true, control: 'PAUSE' })\n        break\n      case 'PAUSE':\n        setTimer({ ...timer, active: false, control: 'START' })\n        break\n      case 'BREAK':\n        setTimer({\n          ...timer,\n          active: true,\n          control: 'PAUSE',\n          onABreak: true,\n          time: timer.duration / 5\n        })\n        break\n      case 'RESET':\n        setTimer({\n          ...timer,\n          control: 'START',\n          onABreak: false,\n          time: timer.duration\n        })\n        break\n      case 'COUNTDOWN':\n        setTimer({\n          ...timer,\n          control: 'PAUSE',\n          time: timer.time - 1000\n        })\n        break\n      case 'STARTBREAK':\n        setTimer({\n          ...timer,\n          active: false,\n          control: 'BREAK'\n        })\n        alarm.play()\n        break\n      case 'TIMEOUT':\n        setTimer({\n          ...timer,\n          active: false,\n          control: 'RESET'\n        })\n        work.play()\n        break\n      default:\n        return\n    }\n  }\n\n  return [timer, toggleTimer]\n}\n","import { useState, useEffect } from 'react'\n\nimport TimerDisplay from './components/TimerDisplay'\nimport About from './components/About'\nimport Backdrop from './components/Backdrop'\nimport ToggleButton from './components/ToggleButton'\n\nimport useTimer from './hooks/useTimer'\n\nconst DURATION = 25 * 60 * 1000\n\nfunction App() {\n  const [appVisible, setAppVisible] = useState(true)\n  const [timer, toggleTimer] = useTimer(DURATION)\n\n  const toggleApp = () => setAppVisible(!appVisible)\n\n  useEffect(() => {\n    let timerInterval\n    if (timer.active && timer.time === 0) {\n      toggleTimer(timer.onABreak ? 'TIMEOUT' : 'STARTBREAK')\n    }\n    if (timer.active) {\n      timerInterval =\n        timer.time > 0 &&\n        setTimeout(() => {\n          toggleTimer('COUNTDOWN')\n        }, 10)\n    } else clearTimeout(timerInterval)\n    return () => clearTimeout(timerInterval)\n  }, [timer.time, timer.active])\n\n  return (\n    <Backdrop\n      time={timer.time}\n      duration={timer.duration}\n      onABreak={timer.onABreak}\n    >\n      <ToggleButton toggled={!appVisible} toggle={toggleApp} />\n      {appVisible && <TimerDisplay timer={timer} toggleTimer={toggleTimer} />}\n      {!appVisible && <About />}\n    </Backdrop>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}